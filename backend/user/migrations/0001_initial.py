# Generated by Django 4.1.7 on 2023-03-06 20:16

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import user.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tnpapp", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DeptOfficer",
            fields=[
                (
                    "customuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("department", models.CharField(max_length=256)),
                ("address", models.TextField(max_length=2000)),
            ],
            options={
                "verbose_name": "Department Officer",
                "verbose_name_plural": "Department Officers",
            },
            bases=("tnpapp.customuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "customuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("marks", models.IntegerField()),
                ("institute", models.CharField(max_length=256)),
                ("department", models.CharField(max_length=256)),
                ("semester", models.CharField(max_length=1)),
                ("batch_year", models.DateField()),
            ],
            options={
                "verbose_name": "Student",
                "verbose_name_plural": "Students",
            },
            bases=("tnpapp.customuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Volunteer",
            fields=[
                (
                    "customuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("job_numbers", models.PositiveSmallIntegerField()),
                ("department", models.CharField(max_length=256)),
                ("semester", models.CharField(max_length=1)),
                (
                    "volunteer_type",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Leader"), (2, "Worker")]
                    ),
                ),
                ("reference", models.TextField(max_length=2000, null=True)),
            ],
            options={
                "verbose_name": "Volunteer",
                "verbose_name_plural": "Volunteers",
            },
            bases=("tnpapp.customuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[],
            options={
                "verbose_name": "Admin",
                "verbose_name_plural": "Admins",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("tnpapp.customuser",),
            managers=[
                ("objects", user.models.AdminUserManager()),
            ],
        ),
    ]
